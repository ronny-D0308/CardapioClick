// TESTE_IMPRESSORA_REDE.JS
const escpos = require('escpos');
escpos.Network = require('escpos-network');

// Configura√ß√µes - Substitua com os dados da sua impressora
const PRINTER_IP = '192.168.0.131'; // Altere para o IP correto
const PRINTER_PORT = 9100; // Porta padr√£o para impressoras t√©rmicas

console.log(`üñ®Ô∏è Iniciando teste de impressora de rede em ${PRINTER_IP}:${PRINTER_PORT}`);

// 1. Criar conex√£o de rede
const device = new escpos.Network(PRINTER_IP, PRINTER_PORT);
const printer = new escpos.Printer(device);

// 2. Teste de conex√£o b√°sica
device.open(async function(error) {
  if (error) {
    console.error('‚ùå Falha na conex√£o:', error.message);
    await testNetworkConnection(PRINTER_IP, PRINTER_PORT);
    return;
  }

  console.log('‚úÖ Conex√£o estabelecida com sucesso!');
  
  // 3. Enviar comando de teste
  printer
    .align('ct')
    .style('B')
    .size(1, 1)
    .text('TESTE DE REDE')
    .text('----------------')
    .text(`IP: ${PRINTER_IP}`)
    .text(`Porta: ${PRINTER_PORT}`)
    .text(new Date().toLocaleString())
    .cut()
    .close(() => {
      console.log('üìÑ Comando de impress√£o enviado com sucesso!');
      process.exit(0);
    });
});

// Fun√ß√£o para testar conectividade de rede
async function testNetworkConnection(ip, port) {
  console.log('\nüîç Realizando diagn√≥sticos de rede:');
  
  try {
    const net = require('net');
    const client = new net.Socket();
    
    // Teste de conex√£o TCP
    await new Promise((resolve, reject) => {
      client.connect(port, ip, () => {
        console.log(`‚úîÔ∏è Conex√£o TCP estabelecida com ${ip}:${port}`);
        client.destroy();
        resolve();
      });
      
      client.setTimeout(3000);
      
      client.on('timeout', () => {
        console.log(`‚åõ Timeout ao conectar em ${ip}:${port}`);
        client.destroy();
        reject(new Error('Timeout'));
      });
      
      client.on('error', (err) => {
        console.log(`‚ùå Falha na conex√£o TCP: ${err.message}`);
        client.destroy();
        reject(err);
      });
    });
    
    // Teste de ping (Windows)
    if (process.platform === 'win32') {
      const { exec } = require('child_process');
      exec(`ping -n 4 ${ip}`, (error, stdout, stderr) => {
        if (error) {
          console.log('‚ùå Falha no ping:', error.message);
          return;
        }
        console.log(`üì∂ Resultado do ping:\n${stdout}`);
      });
    }
  } catch (err) {
    console.log('‚ÑπÔ∏è Recomenda√ß√µes:');
    console.log('- Verifique se o IP da impressora est√° correto');
    console.log('- Confira se a impressora est√° ligada e na mesma rede');
    console.log('- Teste a porta com telnet: "telnet ' + ip + ' ' + port + '"');
    console.log('- Verifique firewall/antiv√≠rus que possa bloquear a conex√£o');
  }
}